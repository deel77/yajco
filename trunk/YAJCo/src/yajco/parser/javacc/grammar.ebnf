ArrayType ::= ('array' 'of' Type)
Associativity ::= ('LEFT' | 'RIGHT' | 'NONE' | 'AUTO')
Concept ::= (('concept' <NAME>) ((':' <NAME>))? (('{' (ConceptPattern)* '}'))? (('AS' ':' (Property ((',' Property))*)))? (('CS' ':' (Notation (('|' Notation))*)))?)
ConceptPattern ::= (Parentheses | Operator | Enum)
Enum ::= 'Enum'
Factory ::= ('Factory' '(' ('method' '=' <NAME>) ')')
Identifier ::= 'Identifier'
Indent ::= ('Indent' | ('Indent' '(' <INT_VALUE> ')'))
Language ::= ((('tokens' (TokenDef)*) ('skips' (<STRING_VALUE>)*) (Concept (Concept)*)) | (('language' <NAME>) ('tokens' (TokenDef)*) ('skips' (<STRING_VALUE>)*) (Concept (Concept)*)))
ListType ::= ('list' 'of' Type)
LocalVariablePart ::= (<NAME> (':' Type) (('{' (NotationPartPattern)* '}'))?)
NewLine ::= 'NewLine'
Notation ::= ((NotationPart (NotationPart)*) (('{' (NotationPattern)* '}'))?)
NotationPart ::= (TokenPart | LocalVariablePart | PropertyReferencePart)
NotationPartPattern ::= (Separator | Range | NewLine | References | Indent)
NotationPattern ::= Factory
Operator ::= (('Operator' '(' ('priority' '=' <INT_VALUE>) ')') | ('Operator' '(' ('priority' '=' <INT_VALUE>) ('associativity' '=' Associativity) ')'))
Parentheses ::= ('Parentheses' | ('Parentheses' '(' 'LEFT' (',' 'RIGHT') ')'))
PrimitiveType ::= (<BOOLEAN> | <INTEGER> | <REAL> | <STRING>)
Property ::= (<NAME> (':' Type) (('{' (PropertyPattern)* '}'))?)
PropertyPattern ::= Identifier
PropertyReferencePart ::= (<NAME> (('{' (NotationPartPattern)* '}'))?)
Range ::= (('Range' '(' <INT_VALUE> '..' '*' ')') | ('Range' '(' <INT_VALUE> ('..' <INT_VALUE>) ')'))
ReferenceType ::= <NAME>
References ::= ('References' '(' <NAME> ((',' 'property' '=' <name>))? ')')
Separator ::= ('Separator' '(' <STRING_VALUE> ')')
SetType ::= ('set' 'of' Type)
TokenDef ::= (<NAME> ('=' <STRING_VALUE>))
TokenPart ::= <STRING_VALUE>
Type ::= (ArrayType | ListType | SetType | PrimitiveType | ReferenceType)
